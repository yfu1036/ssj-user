<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssj.user.mapper.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.ssj.user.model.UserInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="card_id" jdbcType="VARCHAR" property="cardId" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="union_id" jdbcType="VARCHAR" property="unionId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="is_valid" jdbcType="SMALLINT" property="isValid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, real_name, card_id, phone_number, union_id, nick_name, password, is_valid, 
    create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ssj_user_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ssj_user_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ssj.user.model.UserInfo">
    insert into ssj_user_info (id, user_id, real_name, 
      card_id, phone_number, union_id, 
      nick_name, password, is_valid, 
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{cardId,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, #{unionId,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{isValid,jdbcType=SMALLINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ssj.user.model.UserInfo">
    insert into ssj_user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="cardId != null">
        card_id,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="unionId != null">
        union_id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null">
        #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="unionId != null">
        #{unionId,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssj.user.model.UserInfo">
    update ssj_user_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null">
        card_id = #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="unionId != null">
        union_id = #{unionId,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssj.user.model.UserInfo">
    update ssj_user_info
    set user_id = #{userId,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      card_id = #{cardId,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      union_id = #{unionId,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      is_valid = #{isValid,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByUnionId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ssj_user_info
    where union_id = #{unionId,jdbcType=VARCHAR}
  </select>
</mapper>